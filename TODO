EXAMPLES
* filter on runtime values/variables (not only types)
* support to polymorphic types (see #859)

DOC:
* custom storage/view
* examples (and credits) from @alanjfs :)
* update entity doc when the storage based model is in place
* in-place O(1) release/destroy for non-orphaned entities, out-of-sync model

TODO (high prio):
* check natvis files (periodically :)
* doc: exclude only views, bump entities, signals on entity creation/destruction
* registry: replace destroy with a drop-all method that doesn't care about validity
* resource cache: avoid using shared ptr with loader and the others
* rework view tests with typed tests and whatnot
* further optimize exclusion lists in multi type views (no existence check)
* further improve the snapshot stuff, ie component functions
* do not include entity storage in the storage list (37f396bfe385d78b3ff67605e261ec20f16acb76)
* use fixture for storage tests to reduce loc number and duplication as much as possible
* basic_view<...>::reach(...)

WIP:
* get rid of observers, storage based views made them pointless - document alternatives
* exploit the tombstone mechanism to allow enabling/disabling entities (see bump, compact and clear for further details)
* process scheduler: reviews, use free lists internally
* deprecate non-owning groups in favor of owning views and view packs, introduce lazy owning views
* bring nested groups back in place (see bd34e7f)
* work stealing job system (see #100) + mt scheduler based on const awareness for types
